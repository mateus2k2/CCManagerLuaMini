local a=require("/CC/Uteis/Uteis")local b="http://localhost:5015"local c="token"local d="/CC/Logs/logs.txt"local e="/CC/Logs/APIStatus.txt"local f={}local function g(h)local i=fs.open(d,"a")i.writeLine(textutils.serialiseJSON(h))i.close()end;local function j(request)local k=nil;local l=request.body;local m=request.id;if m and l and l.type then if f[l.type]then k=f[l.type].handleRequest(l)else k={result="ERROR",errorType="type not found"}end;if k.result=="ERROR"then g({ERROR="Error processing request = "..textutils.serialiseJSON(k.errorType)})else g({SUCCESS="Got valid result processing request = "..textutils.serialiseJSON(k)})end else g({ERROR="Error in the main handleRequest. Missing request.id or request.body.type or request.body"})k={result="ERROR",errorType="Error in the main handleRequest. Missing request.id or request.body.type or request.body"}end;local n=textutils.serialiseJSON(k)local o=b.."/makeResponse/"..m;local p={["Content-Type"]="application/json",["Authorization"]=c}local q=http.post(o,n,p)if q then g({SUCCESS="Responded to: "..tostring(m).." Got: "..q.readAll()})q.close()else g({ERROR="Error in response: "..tostring(m)})end end;local function r()local p={["Authorization"]=c}request=http.get(b.."/status",p)if request then request.close()return"OK"else return"DOWN"end end;local function s(t)f=t;while true do local u=r()local v=fs.open(e,"w")v.write(u)v.close()local p={["Authorization"]=c}request=http.get(b.."/getOldestRequest",p)if request then obj=textutils.unserialiseJSON(request.readAll())request.close()end;if obj then g({INFO="Request Made: "..a.tableToString(obj)})j(obj)end;os.sleep(0.5)end end;return{startAPI=s,status=r}