local a=require("/CC/Uteis/Uteis")local b="http://localhost:5015"local c="token"local d="/CC/Logs/logs.txt"local e="/CC/Logs/APIStatus.txt"local f={}local function g(h)local i=fs.open(d,"a")i.writeLine(textutils.serialiseJSON(h))i.close()end;local function j(k)local i=fs.open(e,"w")i.writeLine(k)i.close()end;local function l(request)local m=nil;local n=request.body;local o=request.id;if o and n and n.type then if f[n.type]then m=f[n.type].handleRequest(n)else m={result="ERROR",errorType="type not found"}end;if m.result=="ERROR"then g({ERROR="Error processing request = "..textutils.serialiseJSON(m.errorType)})else g({SUCCESS="Got valid result processing request = "..textutils.serialiseJSON(m)})end else g({ERROR="Error in the main handleRequest. Missing request.id or request.body.type or request.body"})m={result="ERROR",errorType="Error in the main handleRequest. Missing request.id or request.body.type or request.body".." "..tostring(o).." "..tostring(n)..tostring(n.type)}end;local p=textutils.serialiseJSON(m)local q=b.."/makeResponse/"..o;local r={["Content-Type"]="application/json",["Authorization"]=c}local s=http.post(q,p,r)if s then g({SUCCESS="Responded to: "..tostring(o).." Got: "..s.readAll()})s.close()else g({ERROR="Error in response: "..tostring(o)})end end;local function k()local r={["Authorization"]=c}request=http.get(b.."/status",r)if request then request.close()return"OK"else return"DOWN"end end;local function t(u)f=u;while true do j(k())local r={["Authorization"]=c}request=http.get(b.."/getOldestRequest",r)if request then obj=textutils.unserialiseJSON(request.readAll())request.close()end;if obj then g({INFO="Request Made: "..a.tableToString(obj)})l(obj)end end end;return{startAPI=t,status=k}